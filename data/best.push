(((set-set ((return_fromnode node_rot (bitset_rot)) exec_yankdup (get-depth (get-able)) exec_do*times)) (node_dup node_eq (bfs-parent node_yankdup exec_eq) (integer_gt set-intersects (exec_yank exec_dup) (bitset_flush boolean_frominteger node_pop)) bfs-depth) node_rot ((exec_shove) set-and (nodes-of boolean_yank node_dup)) integer_dup) ((boolean_dup (((((get-time) exec_do*count ((set-set bitset_yank bitset_yankdup) (set-or integer_sub (integer_dup (set-or exec_yank)) integer_yankdup) set-intersects node_shove)) reduce-max) exec_k boolean_stackdepth) (bitset_rot))) integer_swap boolean_xor ((exec_dup (boolean_or) (node_dup bitset_yankdup) get-size) set-and) (boolean_swap) (integer_yankdup (((((exec_swap node_yank (set-clear) exec_pop bitset_eq (((exec_do*count) bfs-child-count exec_do*count) (integer_yank exec_k integer_lt) node_shove)) (boolean_stackdepth boolean_swap) (node_rot)) get-time) boolean_yank) exec_k ((set-and) get-informed (bitset_dup ((get-active integer_sub integer_sub) return_fromnode) bfs-depth) exec_yankdup (get-active exec_s)) (set-cardinality exec_do*count) integer_yank ((nodes-of boolean_yank node_dup) bfs-parent)) node_yank) (get-depth) (exec_s boolean_yankdup exec_do*count)) integer_stackdepth exec_swap (boolean_flush (exec_pop exec_do*times) (((((boolean_yankdup interferers-of (bfs-depth (get-able reduce-max))) (reduce-min ((integer_pop (boolean_not integer_dup (node_shove nodes-of))) neighbors-of ((integer_yank bfs-child-count) node_flush))) (bitset_eq boolean_flush bitset_stackdepth (integer_eq (bitset_flush))) integer_rot) (bfs-decendents) (exec_rot set-set (bitset_rot boolean_invert_first_then_and)) bitset_rot integer_flush) is-empty exec_do*times exec_s) ((boolean_or nodes-of) exec_when (integer_sub boolean_rot bfs-parent reduce-min)) integer_dup (boolean_eq ((integer_yank exec_shove (exec_do*range) (set-or) exec_do*count (exec_if get-time exec_do*count)) bitset_shove (get-active) integer_gt (exec_eq integer_mult (boolean_not) (return_fromnode (nodes-of)) exec_stackdepth) bitset_rot bfs-depth) (((node_dup) (get-active bfs-decendents) (exec_pop) integer_gt)) ((integer_rot) reduce-min (integer_swap)) ((integer_eq) get-informed ((bitset_yank boolean_flush nodes-of integer_sub) exec_yank ((exec_if bfs-parent) (((exec_stackdepth ((((((get-able) boolean_stackdepth) (exec_when exec_pop integer_mod) ((boolean_yank) (set-cardinality boolean_invert_first_then_and)) nodes-of) integer_swap exec_do*range get-time) ((set-or get-active get-depth (integer_dup (bitset_pop (exec_dup) integer_fromboolean)) integer_dup (bfs-child-count (bitset_rot))) integer_sub (bitset_rot bfs-decendents ((integer_flush)) (integer_stackdepth get-depth)) bitset_flush reduce-min) boolean_invert_second_then_and) bfs-child-count) (bitset_stackdepth) ((bitset_stackdepth return_fromnode) (((reduce-max boolean_rot)) nodes-of integer_rot (integer_eq) (reduce-min exec_shove) (set-and bfs-decendents exec_pop)) integer_yankdup set-intersects)) (bitset_shove exec_do*range exec_do*count)) set-get) set-clear reduce-max)) node_dup) (get-able) exec_rot (integer_max exec_s) bitset_shove) ((((integer_min bitset_shove (((bitset_eq boolean_frominteger ((nodes-of) get-time) bitset_stackdepth) integer_lt exec_s exec_k (integer_add)) ((node_dup) exec_when ((bitset_stackdepth ((boolean_and integer_add (node_shove))) node_yank) (boolean_and (integer_eq boolean_swap integer_stackdepth) (node_rot)) (get-informed)) (node_shove)) bitset_dup (boolean_pop (exec_swap exec_do*range ((exec_if exec_rot) boolean_flush) set-set set-clear) bitset_flush)) (set-flip) (node_rot (integer_shove exec_stackdepth boolean_pop set-or) node_shove)) boolean_yank set-cardinality (bitset_flush (integer_shove) bfs-depth) integer_mod ((reduce-min set-or integer_min) node_dup)) integer_flush) get-able exec_if) ((boolean_yankdup exec_y) (((integer_gt exec_rot) exec_k (integer_pop exec_yank) exec_yank) integer_lt exec_k))) (set-get set-get) node_eq))
